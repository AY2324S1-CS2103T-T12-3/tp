name: Java CI

on: [push, pull_request]

jobs:
  build:
    permissions:
      # Required to upload/save artifact, otherwise you'll get
      # "Error: Resource not accessible by integration"
      contents: write
      # Required to post comment, otherwise you'll get
      # "Error: Resource not accessible by integration"
      pull-requests: write
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set up repository
        uses: actions/checkout@main

      - name: Set up repository
        uses: actions/checkout@main
        with:
          ref: master

      - name: Merge to master
        run: git checkout --progress --force ${{ github.sha }}

      - name: Run repository-wide tests
        if: runner.os == 'Linux'
        working-directory:  ${{ github.workspace }}/.github
        run: ./run-checks.sh

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          java-package: jdk+fx

      - name: Build and check with Gradle
        run: ./gradlew check coverage

      - name: Upload coverage reports to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Run shadowJar
        if: runner.os == 'Linux'
        run:
          ./gradlew shadowJar

      - name: Upload jar file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: CampusCompanion executable
          path: build/libs/CampusCompanion.jar

  comment-on-pr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifact URL & PR Info
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
        run: |

          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"

          ARTIFACT_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .archive_download_url")

          echo "ARTIFACT URL: $ARTIFACT_URL"
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> "$GITHUB_ENV"

          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")

          echo "PR Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"

          HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")

          echo "Head sha: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"

      - name: Update Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/\
            runs/${{ env.PREVIOUS_JOB_ID }}"
          HEAD_SHA: ${{ env.HEAD_SHA }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ env.PR_NUMBER }}
          body: |-
            ## Build Preview

            [![badge]]($JOB_PATH)

            You can find files attached to the below linked Workflow Run URL (Logs).

            Please note that files only stay for around 90 days!

            | Name      | Link
            --------------------------------------------------------------------
            | Commit    | ${{ env.HEAD_SHA }}

            | Logs      | ${{ env.JOB_PATH }}

            | Jar Files | ${{ env. ARTIFACT_URL }}

            [badge]: https://img.shields.io/badge/Build-Success!-3fb950?logo=github&style=for-the-badge
